{"version":3,"sources":["dataDisplayComponent.js"],"names":["DataDisplay","state","tempScale","localStorage","getItem","Object","defineProperty","get","set","_v","console","log","setItem","setState","_grad","_temp","_tempScale","_farenheitToCelsius","_kelvinToFarenheit","toFixed","_name","dname","Date","getHours","toLowerCase","weather","props","tempClass","forecasts","momentData","moment","idx","list","forecast","dayname","format","temp","_tempConvert","day","icon","_weatherNameToImgClass","main","push","add","destroy","city","name","_tempToggle","bind","description","morn","eve","night","React","Component"],"mappings":"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","file":"../components/dataDisplayComponent.js","sourcesContent":["class DataDisplay extends React.Component {\n  constructor() {\n      super();\n      this.state = {\n          tempScale: localStorage.getItem(\"temperature\") ? localStorage.getItem(\"temperature\") : \"C\"\n      }\n      Object.defineProperty(this,\"_tempScale\",{\n          get() {\n              return this.state.tempScale\n          },\n          set(_v) {\n              console.log(\"Temperature:\",_v)\n              localStorage.setItem(\"temperature\" ,_v);\n              this.setState({tempScale: _v});\n          }\n      });\n\n\n  }\n\n  _farenheitToCelsius(_grad) {\n      return (_grad - 32) * (5/9);\n  };\n\n  _kelvinToFarenheit(_grad) {\n     return _grad * (9/5) - 459.67\n  }\n  _tempConvert(_temp) {\n      if(this._tempScale == \"C\") {\n          return this._farenheitToCelsius(this._kelvinToFarenheit(_temp)).toFixed(0);\n      } else {\n          return this._kelvinToFarenheit(_temp).toFixed(0);\n      }\n  }\n\n  _tempToggle() {\n      if(this._tempScale == \"C\") {\n          this._tempScale = \"F\";\n      } else {\n          this._tempScale = \"C\";\n      }\n  }\n\n  _weatherNameToImgClass(_name) {\n      let dname = \"night\";\n      if(new Date().getHours() > 10 && new Date().getHours() < 18) {\n          let dname = \"day\";\n      }\n\n      if(_name === \"Clouds\") {\n          _name = \"cloudy\";\n      }\n      \n      return \"wi wi-\" + dname + \"-\" + _name.toLowerCase();\n  }\n\n  render() {\n     \n    const weather = this.props.weather();\n     console.log(\"Weather re render\", weather);\n     const tempClass = \"circle\"+((this._tempScale==\"C\") ? \" right\":\"\");\n     const forecasts = [];\n     let momentData = moment();\n     for(let idx in weather.list) {\n            const forecast = weather.list[idx];\n            const dayname = momentData.format(\"dddd\"); \n            const temp = this._tempConvert(forecast.temp.day) + \"°\"+this._tempScale;\n            const icon = this._weatherNameToImgClass(forecast.weather[0].main);\n            forecasts.push( <div key={idx}>\n                <div className=\"day-name\">\n                    {dayname}\n                </div>\n                <div className={\"day-icon \"+icon}></div>\n                <div className=\"day-temp\">\n                    {temp}\n                </div> \n            </div> ); \n            momentData = momentData.add(1, \"days\")\n      }\n\n \n    return (\n        <div className=\"component data-display\">\n            <div className=\"back-arrow\" onClick={this.props.destroy}>\n                <i className=\"material-icons\">arrow_back</i>\n            </div> \n             <div className=\"location-name\">\n                {weather.city.name}\n             </div>\n             <div className=\"farenheit-celsius-switch\" onClick={this._tempToggle.bind(this)}>\n                <div className={tempClass}></div>\n                 <div className={\"temp-name-\"+this._tempScale}> {\"°\"+this._tempScale}</div>\n             </div>\n             <div className=\"date-display\">\n                {moment().format(\"dddd, MMMM Do YYYY\")}\n             </div> \n             <div className=\"today-weather-desc\">\n                {weather.list[0].weather[0].description}\n             </div> \n             <div className=\"main-weather-screen\">\n                <div className=\"temperature\">\n                    {this._tempConvert(weather.list[0].temp.day)+ \"°\" +this._tempScale}\n                </div>\n                <div className=\"icon\">\n                   <div className={ this._weatherNameToImgClass(weather.list[0].weather[0].main)}></div> \n                </div>\n                <div className=\"data\">\n                    <div>Morning: <div className=\"text\"> {this._tempConvert(weather.list[0].temp.morn)+\"°\"+this._tempScale}</div></div>\n                    <div>Day:<div  className=\"text\">  {this._tempConvert(weather.list[0].temp.day)+\"°\"+this._tempScale}</div></div>\n                    <div>Evening: <div className=\"text\"> {this._tempConvert(weather.list[0].temp.eve)+\"°\"+this._tempScale}</div></div>\n                    <div>Night: <div className=\"text\"> {this._tempConvert(weather.list[0].temp.night)+\"°\"+this._tempScale}</div></div>\n                </div>\n             </div> \n\n\n             <div className=\"weather-forecast\">\n                {forecasts}\n             </div>\n\n        </div>\n    );\n  }\n}"]}